<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>metadata</key>
	<dict>
		<key>lastUpdated</key>
		<date>2016-03-14T03:56:30Z</date>
	</dict>
	<key>sessions</key>
	<dict>
		<key>b344</key>
		<dict>
			<key>active</key>
			<true/>
			<key>date</key>
			<date>2016-03-19T14:00:00Z</date>
			<key>trackId</key>
			<integer>0</integer>
			<key>column</key>
			<integer>1</integer>
			<key>sessionNumber</key>
			<integer>344</integer>
			<key>title</key>
			<string>Creating and testing REST contracts with Accurest Gradle Plugin</string>
			<key>sessionDescription</key>
			<string>REST does not come with an in-built contract compliance mechanism, which in many ways is a great thing. However, while working with microservice-based systems, it often appears that a practical mechanism that would provide help in shaping and describing REST contracts would come in handy. Similarly, creating integration and acceptance tests in such systems presents many challenges. In this talk, I will present Accurest, a Gradle plugin that allows for both: easily shaping REST contracts and verifying if our app adheres to them using automatically generated Spock tests. I will show how, using Accurest, we can quickly generate automatically-tested stubs from simple Groovy DSL scripts. I will talk about the typical usages and script examples, as well as possible problems and ways of handling them.</string>
			<key>presenters</key>
			<array>
				<string>olga_maciaszek</string>
			</array>
			<key>roomId</key>
			<integer>0</integer>
		</dict>
		<key>b339</key>
		<dict>
			<key>active</key>
			<true/>
			<key>date</key>
			<date>2016-03-19T09:00:00Z</date>
			<key>trackId</key>
			<integer>0</integer>
			<key>column</key>
			<integer>1</integer>
			<key>sessionNumber</key>
			<integer>339</integer>
			<key>title</key>
			<string>Creating applications with Grails, Angular JS and Spring Security</string>
			<key>sessionDescription</key>
			<string>Grails 3.1 enhances and improves the profile system introduced in Grails 3.0. One of the new profiles ease the creation and development of applications where the the front-end is an Angular JS application, and the backend is a Grails REST API.In this session, Álvaro (member of the Grails team at OCI, Grails committer and author of several plugins) will demonstrate how to use the Angular profile to create an application using Grails 3.1, Angular JS and Spring Security REST</string>
			<key>presenters</key>
			<array>
				<string>alvaro_sanchez</string>
			</array>
			<key>roomId</key>
			<integer>0</integer>
		</dict>
		<key>b373</key>
		<dict>
			<key>active</key>
			<true/>
			<key>date</key>
			<date>2016-03-19T15:30:00Z</date>
			<key>trackId</key>
			<integer>0</integer>
			<key>column</key>
			<integer>1</integer>
			<key>sessionNumber</key>
			<integer>373</integer>
			<key>title</key>
			<string>Gradle under the hood.</string>
			<key>sessionDescription</key>
			<string>More and more projects switch from Maven to Gradle. Facing deadlines and little time to investigate, many follow this trend without understanding what exactly is going on inside Gradle's internals.I'll try to shed some light on this matter - aiming for not another tutorial like presentation but rather focus on the Gradle itself. Show - that proper tool understanding can help to avoid many mistakes and that there are almost no limits in Gradle universe.</string>
			<key>presenters</key>
			<array>
				<string>dawidkublik</string>
			</array>
			<key>roomId</key>
			<integer>0</integer>
		</dict>
		<key>b351</key>
		<dict>
			<key>active</key>
			<true/>
			<key>date</key>
			<date>2016-03-19T10:30:00Z</date>
			<key>trackId</key>
			<integer>0</integer>
			<key>column</key>
			<integer>1</integer>
			<key>sessionNumber</key>
			<integer>351</integer>
			<key>title</key>
			<string>Griffon: what's new and what's coming</string>
			<key>sessionDescription</key>
			<string>The Griffon framework has reinvented itself in order to reach new heights! Version 2.0 brings along a better modular design, dependency injection, JDK8 Lambdas support, and much more. The reduced memory footprint of the Griffon runtime allows applications to be installed on platforms where resources are scarcer, such as Raspberry Pi and other embedded platforms. Turning to the build time, applications can participate effortlessly on multi-project builds, no matter if those builds are driven by Gradle or Maven. There are of course other features that will popup in the near future. Come learn what's new and what's next for Griffon; one thing is for sure, it's future looks very bright.</string>
			<key>presenters</key>
			<array>
				<string>aalmiray</string>
			</array>
			<key>roomId</key>
			<integer>0</integer>
		</dict>
		<key>b369</key>
		<dict>
			<key>active</key>
			<true/>
			<key>date</key>
			<date>2016-03-19T11:00:00Z</date>
			<key>trackId</key>
			<integer>0</integer>
			<key>column</key>
			<integer>1</integer>
			<key>sessionNumber</key>
			<integer>369</integer>
			<key>title</key>
			<string>How to create a conference android app with Groovy and Android?</string>
			<key>sessionDescription</key>
			<string>In this talk Sergio del Amo will show you how to:Create conference websites with Wordpress custom post types and custom fields Use a Groovy Android library to consume your Wordpress’s generated JSON API Develop a simple Android App with Groovy which shows the conference data. After this talk you will be able to jump into development for Android with Groovy and consume easily custom Wordpress backends</string>
			<key>presenters</key>
			<array>
				<string>sdelamo</string>
			</array>
			<key>roomId</key>
			<integer>0</integer>
		</dict>
		<key>b142</key>
		<dict>
			<key>active</key>
			<true/>
			<key>date</key>
			<date>2016-03-19T16:00:00Z</date>
			<key>trackId</key>
			<integer>0</integer>
			<key>column</key>
			<integer>1</integer>
			<key>sessionNumber</key>
			<integer>142</integer>
			<key>title</key>
			<string>Idiomatic Gradle - Recipes for Plugin Authors</string>
			<key>sessionDescription</key>
			<string>Building plugins for Gradle is not difficult. Building good DSLs for Gradle plugins is harder. I would like to take you on a journey through various recipes that can be applied to make your Gradle plugin more gradlesque. From the basic of handling task properties through to the esoterics of loading dependencies in integration tests or how to use a plugin to build itself (!). This session will also explore the new model which is currently incubating in the 2.x series.If you are a experiences plugin author or a budding new one, you'll probably learn something; just as I did in the procecess of authoring a book on this subject.</string>
			<key>presenters</key>
			<array>
				<string>ysb33r</string>
			</array>
			<key>roomId</key>
			<integer>0</integer>
		</dict>
		<key>b375</key>
		<dict>
			<key>active</key>
			<true/>
			<key>date</key>
			<date>2016-03-19T13:00:00Z</date>
			<key>trackId</key>
			<integer>0</integer>
			<key>column</key>
			<integer>1</integer>
			<key>sessionNumber</key>
			<integer>375</integer>
			<key>title</key>
			<string>Jenkins as a Code - leveraging Groovy for infrastructure management</string>
			<key>sessionDescription</key>
			<string>Jobs in Jenkins (or any other CI/CD tool) can be created and updated manually using GUI. It is ok if you have a few/several of them. However, most of the companies grow and you can quickly wake up with dozens or hundreds of jobs to maintain.A new email address/alias to get notification about failed builds? Global migration to the better™ SCM? No way to do it manually with GUI in a convenient way. Manual scripts using Jenkins API? Better, but hard to test and maintain. The same applies to plugin installation, credentials etc. Luckily, there is a better way.During the talk we will present how Jenkins Job DSL together with Ansible can be used to automatically provision Jenkins instance and maintain any number of jobs. We will show how to define jobs and views in Groovy based DSL and test automatically that the generated structures are exactly the same as expected in Jenkins. Expect live demo - we will setup fully functional Jenkins instance with just one click!</string>
			<key>presenters</key>
			<array>
				<string>wybczu</string>
				<string>SolidSoftBlog</string>
			</array>
			<key>roomId</key>
			<integer>0</integer>
		</dict>
		<key>b340</key>
		<dict>
			<key>active</key>
			<true/>
			<key>date</key>
			<date>2016-03-19T14:30:00Z</date>
			<key>trackId</key>
			<integer>0</integer>
			<key>column</key>
			<integer>1</integer>
			<key>sessionNumber</key>
			<integer>340</integer>
			<key>title</key>
			<string>Spring Cloud's Groovy</string>
			<key>sessionDescription</key>
			<string>Groovy is awesome - that’s a fact. But did you know that Spring Cloud’s awesome too? In this talk I won't go through all of the Spring Cloud's tools since lot of people already know them. Not that many know about Spring Cloud Sleuth (the distributed tracing solution for your cloud) and Spring Cloud Stream (messaging between microservices has never been that easy!).In this presentation we’ll see a Groovy microserviced based system using the Spring Cloud tooling. We’ll focus on distributed tracing with Spring Cloud Sleuth and Zipkin. I'll also show how we're testing our libraries with Gradle. I'll prove that in Spring Cloud it's enough to just change a dependency and configuration in order to completely change for example the service discovery provider. Without changing a single line of production code!</string>
			<key>presenters</key>
			<array>
				<string>MGrzejszczak</string>
			</array>
			<key>roomId</key>
			<integer>0</integer>
		</dict>
		<key>b316</key>
		<dict>
			<key>active</key>
			<true/>
			<key>date</key>
			<date>2016-03-19T12:30:00Z</date>
			<key>trackId</key>
			<integer>0</integer>
			<key>column</key>
			<integer>1</integer>
			<key>sessionNumber</key>
			<integer>316</integer>
			<key>title</key>
			<string>Sshoogr for your infrastructure automation</string>
			<key>sessionDescription</key>
			<string>Infrastructure automation is not what most developers prefer to do, but when they do, they seek for simplicity. Sshoogr started as a simple SSH wrapper, but currently it is growing to become Ansible of Groovy. That allows to combine configuration, connectivity and state management of your servers and containers within a simple and readable DSL.</string>
			<key>presenters</key>
			<array>
				<string>codingandrey</string>
			</array>
			<key>roomId</key>
			<integer>0</integer>
		</dict>
		<key>b370</key>
		<dict>
			<key>active</key>
			<true/>
			<key>date</key>
			<date>2016-03-19T09:30:00Z</date>
			<key>trackId</key>
			<integer>0</integer>
			<key>column</key>
			<integer>1</integer>
			<key>sessionNumber</key>
			<integer>370</integer>
			<key>title</key>
			<string>There's so much more to Ratpack than non-blocking</string>
			<key>sessionDescription</key>
			<string>A lot has been already said about the biggest strength of Ratpack which is that it makes writing non-blocking and thus highly performant and resource-efficient web applications easy. In this talk I will totally ignore that part of Ratpack and explain what I believe to be the features that make the day to day life of a developer more pleasant and productive.We will look into: • testability of Ratpack apps • usefulness of the toolkit when testing other applications • configuration mechanism and its extensibility • deploying into the cloud • development time reloading • parsers, renderers and services • the built in http client • http session implementation • the "integrate over abstract" strategy</string>
			<key>presenters</key>
			<array>
				<string>marcinerdmann</string>
			</array>
			<key>roomId</key>
			<integer>0</integer>
		</dict>
	</dict>
	<key>people</key>
	<dict>
		<key>alvaro_sanchez</key>
		<dict>
			<key>active</key>
			<true/>
			<key>first</key>
			<string>Alvaro</string>
			<key>last</key>
			<string>Sanchez-Mariscal</string>
			<key>twitter</key>
			<string>alvaro_sanchez</string>
			<key>bio</key>
			<string>Álvaro is a passionate software architect and agile enthusiast with over 15 years of experience. He started his career in 2001 coding in Perl and Java, but then quickly focused on Java EE, working for companies like IBM BCS, BEA Systems or Sun Microsystems. He created his own company, Salenda, in 2005, and since 2007 has specialised in Groovy/Grails, introducing them in Spain by founding Escuela de Groovy, the very first Grails company in Spain. He now works at OCI, the company behind Grails; he is a member of the Grails team at OCI, a Grails committer, and also supports the Spring Security plugins.Álvaro is a speaker at conferences like GeeCON, JavaLand, JavaZone and Codemotion (http://lanyrd.com/profile/alvaro_sanchez/). He has also written several Grails plugins, including Spring Security REST, which provides stateless, RESTful, token based authentication for Grails using OAuth 2 and JWT (http://github.com/alvarosanchez).</string>
		</dict>
		<key>aalmiray</key>
		<dict>
			<key>active</key>
			<true/>
			<key>first</key>
			<string>Andres</string>
			<key>last</key>
			<string>Almiray</string>
			<key>twitter</key>
			<string>aalmiray</string>
			<key>bio</key>
			<string>Andres is a Java/Groovy developer and Java Champion, with more than 14 years of experience in software design and development. He has been involved in web and desktop application developments since the early days of Java. His current interests include Groovy, Swing and JavaFX. He is a true believer of open source and has participated in popular projects like Groovy, Grails and DbUnit, as well as starting his own projects. Founding member and current project lead of the Griffon framework.</string>
		</dict>
		<key>codingandrey</key>
		<dict>
			<key>active</key>
			<true/>
			<key>first</key>
			<string>Andrey</string>
			<key>last</key>
			<string>Adamovich</string>
			<key>twitter</key>
			<string>codingandrey</string>
			<key>bio</key>
			<string>Andrey Adamovich is a software craftsman with many years of experience in different lifecycle phases of software creation. Andrey's love is JVM ecosystem. In recent years, he tries to apply JVM goodness to DevOps initiatives his company is implementing for several clients. He is one of the authors of Groovy 2 Cookbook as well as frequent speaker at local communities and conferences.</string>
		</dict>
		<key>dawidkublik</key>
		<dict>
			<key>active</key>
			<true/>
			<key>first</key>
			<string>Dawid</string>
			<key>last</key>
			<string>Kublik</string>
			<key>twitter</key>
			<string>dawidkublik</string>
			<key>bio</key>
			<string>Dawid's programming history reaches as far as the times of C64, but currently he deals with more modern stack involving mostly jvm technologies. Working as a developer in many different projects including areas like telecommunication, insurance, finance and media for more then a decade, and being witness to a few revolutions in technology, methodology and overall way of thinking - he still is somehow open to changes and tries to utilize what they bring.Currently working as Senior Software Developer and Team Leader in 4FinaceIT.</string>
		</dict>
		<key>wybczu</key>
		<dict>
			<key>active</key>
			<true/>
			<key>first</key>
			<string>Lukasz</string>
			<key>last</key>
			<string>Szczesny</string>
			<key>twitter</key>
			<string>wybczu</string>
			<key>bio</key>
			<string>He is an enthusiast of Free and Open Source Software and Open Hardware. Co-organizer of Warsaw Linux User Group. Fan of DevOps and automation.</string>
		</dict>
		<key>marcinerdmann</key>
		<dict>
			<key>active</key>
			<true/>
			<key>first</key>
			<string>Marcin</string>
			<key>last</key>
			<string>Erdmann</string>
			<key>twitter</key>
			<string>marcinerdmann</string>
			<key>bio</key>
			<string>Marcin has been developing in Groovy since 2010. Currently based in London but has worked in other European countries in the past. He believes in Open Source Software and has a strong need to give back to the community whenever possible. Marcin loves Open Source Software and has a strong need to give back to the community whenever possible. That’s why he’s proud to be the current project lead of Geb, a Groovy Browser automation library. In the past he contributed to many open source projects in the Groovy ecosystem and he enjoys going to conferences both as an attendee and a speaker. That’s where you will find him with a pint of good beer in hand engaged in lengthy discussions on how to make software development process and quality better.</string>
		</dict>
		<key>MGrzejszczak</key>
		<dict>
			<key>active</key>
			<true/>
			<key>first</key>
			<string>Marcin</string>
			<key>last</key>
			<string>Grzejszczak</string>
			<key>twitter</key>
			<string>MGrzejszczak</string>
			<key>bio</key>
			<string>Open source contributor e.g Rest-assured, Mockito, Groovy. Co-author of Micro Infra Spring and Accurest. Author of Mockito books. Making Spring Cloud @Pivotal</string>
		</dict>
		<key>SolidSoftBlog</key>
		<dict>
			<key>active</key>
			<true/>
			<key>first</key>
			<string>Marcin</string>
			<key>last</key>
			<string>Zajaczkowski</string>
			<key>twitter</key>
			<string>SolidSoftBlog</string>
			<key>bio</key>
			<string>Experienced architect aiming for high quality solutions. Very engaged in evangelising Software Craftsmanship, Clean Code and Test-Driven Development (with Spock :) ) as a conference speaker and trainer. An expert in deployment automation with Continuous Delivery and Continuous Inspection of Code Quality. An enthusiast of Reactive Systems and broadly defined concurrency. Besides, open source author and contributor, a proud Linux user.</string>
		</dict>
		<key>olga_maciaszek</key>
		<dict>
			<key>active</key>
			<true/>
			<key>first</key>
			<string>Olga</string>
			<key>last</key>
			<string>Maciaszek-Sharma</string>
			<key>twitter</key>
			<string>olga_maciaszek</string>
			<key>bio</key>
			<string>Olga Maciaszek-Sharma is a Java and Groovy Developer at Codearte. She has gained her experience while working with microservices where cutting-edge solutions were used as well as with complex legacy systems, implementing both new business features and solutions aimed at improving the process of continuous deployment and setup of applications. Olga is also a contributor of the OSS projects: Accurest, JFairy, Jenkins Stash Pull Request Builder Plugin and a few others. Before switching to development, she worked for more than 3 years as Quality Assurance Engineer, specialized in test automation.</string>
		</dict>
		<key>ysb33r</key>
		<dict>
			<key>active</key>
			<true/>
			<key>first</key>
			<string>Schalk</string>
			<key>last</key>
			<string>Cronjé</string>
			<key>twitter</key>
			<string>ysb33r</string>
			<key>bio</key>
			<string>Schalk Cronjé’s experience in the software industry spans three decades and has performed most roles in software delivery. He believes that both software engineering and craftsmanship is important for the industry and that both disciplines should be taught to achieve holism in technology delivery. He also understands that there is a strong relationship between the modern software techniques that are used and the signature skills of people and these should be aligned for effective delivery. He is also a strong advocate of using systems thinking, holistic stakeholder analysis and impact mapping. He keeps his technical skills fit by frequent contributions to various open-source projects. He is the creator of Groovy-VFS as well a maintainer of various Gradle plugins including for JRuby, GMake, Doxygen and more.He is a regular speaker on various software delivery techniques in the UK, USA, India and South Africa. He currently serves as a steering committee member of the Agile Testing Alliance.</string>
		</dict>
		<key>sdelamo</key>
		<dict>
			<key>active</key>
			<true/>
			<key>first</key>
			<string>Sergio</string>
			<key>last</key>
			<string>del Amo</string>
			<key>twitter</key>
			<string>sdelamo</string>
			<key>bio</key>
			<string>Sergio del Amo is one of the founders of Shoptimix; a company which aims to disrupt the way we do our daily shopping. He also writes a weekly email newsletter called Groovy Calamari which talks about the Groovy Ecosystem.Before Shoptimix Sergio worked as a Web designer and software developer for several years in a small agency that he started. It focused on the development of websites, web applications and mobile phone apps (iOS / Android).</string>
		</dict>
	</dict>
	<key>rooms</key>
	<array>
		<dict>
			<key>name</key>
			<string>Big</string>
			<key>image</key>
			<string></string>
		</dict>
		<dict>
			<key>name</key>
			<string>Hall</string>
			<key>image</key>
			<string></string>
		</dict>
	</array>
	<key>tracks</key>
	<array>
		<string>GR8Day Warsaw Track</string>
		<string>GR8Day Warsaw Breaks Track</string>
	</array>
</dict>
</plist>